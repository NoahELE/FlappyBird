@startuml
class ShadowFlap {
	- WIDTH: int
	- HEIGHT: int
	- LEVEL0_MAX_SCORE: int
	- LEVEL1_MAX_SCORE: int
	- background: Image
	- font: Font
	- pipes: Queue<Pipe>
	- bird: Bird
	- win: boolean
	- lose: boolean
	- levelUp: boolean
	- levelUpCounter: int
	- score: int
	- pipeSpawningCounter: int
	- started: boolean
	- birdPassPipe: boolean

	+ ShadowFlap()

	- update()
	+ main(args: String[]) {static}
}

abstract class Pipe {
    - GAP: int {static}
    - stepSize: int {static}
	- image: Image
	- upright: boolean
	- type: int
	- x: double
	- y: double
	- passedByBird: boolean
	- collideWithBird: boolean

	+ Pipe(upright: boolean, height: double, type: int)

	+ getRandomPos(): double {static}
	+ draw()
	+ move()
	+ isOutOfBound(): boolean
	+ getImage(): Image
	+ getX(): double
	+ getCollideWithBird(): boolean
	+ setCollideWithBird(collideWithBird: boolean)
	+ getPassedByBird(): boolean
	+ setPassedByBird(passedByBird: boolean)
	+ getStepSize(): double {static}
	+ setStepSize(stepSize: double)
	+ getRect(): Rectangle
}

class PlasticPipe extends Pipe {}

class SteelPipe extends Pipe {
	- flameCounter: int

	+ SteelPipe(upright: boolean, height: double)

	+ shootFlame()
}

class Flame {
	- image: Image
	- speed: double
	- upward: boolean

	+ Flame()

	- move()
	- isOutofBorder(): boolean
}

class Bird {
	- birdWingUp: Image
	- birdWingdown: Image
	- image: Image
	- x: double
	- y: double
	- image: Image
	- wingcounter: int
	- speed: double
	- lives: int

	+ Bird(x: double, y: double, level: int, lives: int)

	+ draw()
	+ fall()
	+ fly()
	+ move()
	+ isOutOfBound(): boolean
	+ collideWith(pipe: Pipe): boolean
	+ loseLife()
	+ getLives(): int
	+ getX(): double
	+ setY(d: double)
	+ getRect(): Rectangle
}

abstract class Weapon {
	- x: double
	- y: double
	- MOVE_SPEED: double {static}
	- SHOOT_SPEED: double {static}
	- image: Image

	+ Weapon(y: double)

	+ isOutOfBorder(): boolean
	+ move()
	+ shoot()
	+ getRect(): Rectangle
}

class Rock extends Weapon {
	+ RANGE: double {static}
}

class Bomb extends Weapon {
	+ RANGE: double {static}
}

ShadowFlap ..> Bird
ShadowFlap ..> Pipe
Bird ..> ShadowFlap
Pipe ..> ShadowFlap
Bird ..> Pipe
Pipe "2" <--* "1" ShadowFlap
Bird "1" <--* "1" ShadowFlap
ShadowFlap ..> Weapon
Weapon ..> ShadowFlap
Weapon "n" <--* "1" ShadowFlap
Weapon ..> Bird
SteelPipe ..> Flame
Flame "0..n" <--* "1" ShadowFlap
@enduml
